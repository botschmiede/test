name: Deploy Site on Repo Creation

on:
  workflow_dispatch:
    inputs:
      chatBotId:
        description: 'ChatBot ID'
        required: true
      backendId:
        description: 'Backend ID'
        required: true
      name:
        description: 'ChatBot Name'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Supabase CLI
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Authenticate Supabase CLI
        env:
          SUPABASE_PAT: ${{ secrets.SUPABASE_PAT }}
        run: |
          echo $SUPABASE_PAT | supabase login

      - name: Fetch Supabase anon key
        id: fetch_key
        run: |
           # Fetch the anon key and print it for debugging
            ANON_KEY=$(supabase projects api-keys --project-ref ${{ inputs.backendId }} | grep 'anon' | sed 's/.*â”‚ //' | sed 's/\x1b\[[0-9;]*m//g')
            echo "Extracted ANON_KEY: $ANON_KEY"
            echo "ANON_KEY=$ANON_KEY" >> $GITHUB_ENV

      - name: Init PG-DB
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB }}
        run: |
          # Using psql
          echo "${{ secrets.SUPABASE_DB }}"
          echo $PGPASSWORD
          psql -h db.${{ inputs.backendId }}.supabase.co -U postgres -d postgres -a -f seed.sql


      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel --prod --yes --token $VERCEL_TOKEN --scope hadadadebadada \
            --env SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            --env SERPAPI_API_KEY=${{ secrets.SERPAPI_API_KEY }} \
            --env OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --env SUPABASE_PRIVATE_KEY=$ANON_KEY
